rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isMemberOfTrip(tripId) {
      return request.auth != null &&
        request.auth.uid in get(/databases/$(database)/documents/trips/$(tripId)).data.members;
    }

    function isTripOwner(tripId) {
      return request.auth != null &&
        get(
          /databases/$(database)/documents/users/$(request.auth.uid)/trips/$(tripId)
        ).data.role == "owner";
    }

    match /users/{userId} {
      allow read: if request.auth != null &&
        exists(/databases/$(database)/documents/trips/trip1) &&
        userId in get(/databases/$(database)/documents/trips/trip1).data.members;

      allow write: if request.auth != null && request.auth.uid == userId;

      match /trips/{tripRef} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    match /trips/{tripId} {
      allow read: if isMemberOfTrip(tripId);

      allow write: if request.auth != null &&
        (
          request.resource.data.members.hasOnly([request.auth.uid]) ||
          request.resource.data.members.hasAll([request.auth.uid])
        );

      match /dateVotes/{userId} {
        allow read: if isMemberOfTrip(tripId);
        allow write: if request.auth != null && request.auth.uid == userId;
      }

      match /chat/{messageId} {
        allow read: if isMemberOfTrip(tripId);
        allow write: if false;
      }
    }
  }
}
